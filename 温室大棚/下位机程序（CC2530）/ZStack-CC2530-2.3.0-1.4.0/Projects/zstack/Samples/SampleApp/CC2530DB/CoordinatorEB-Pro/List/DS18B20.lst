###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.40194/W32 for 8051         09/Oct/2018  23:29:59 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\Source\DS18B20.c             #
#    Command line       =  -f F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú #
#                          ³ÌÐò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\Tools\C #
#                          C2530DB\f8wCoord.cfg (-DCPU32MHZ                   #
#                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRU #
#                          E -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f     #
#                          F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\Tools\CC25 #
#                          30DB\f8wConfig.cfg (-DSECURE=0                     #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\Source\DS18B20.c -D          #
#                          ZIGBEEPRO -D ZTOOL_P1 -D xMT_TASK -D xMT_SYS_FUNC  #
#                          -D xMT_ZDO_FUNC -lC F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨ #
#                          ²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐò£¨CC2530£©\ZStack-CC2530-2.3. #
#                          0-1.4.0\Projects\zstack\Samples\SampleApp\CC2530DB #
#                          \CoordinatorEB-Pro\List\ -lA                       #
#                          F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\CoordinatorEB-Pro\L #
#                          ist\ --diag_suppress Pe001,Pa010 -o                #
#                          F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\CoordinatorEB-Pro\O #
#                          bj\ -e --debug --core=plain --dptr=16,1            #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú #
#                          ³ÌÐò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\ -I              #
#                          F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\SOURCE\ -I       #
#                          F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\ZMAIN\TI25 #
#                          30DB\ -I F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ #
#                          ÏÂÎ»»ú³ÌÐò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. #
#                          .\..\COMPONENTS\MT\ -I F:\2019\Íõ¼üÄþ-20181005\³ÌÐ #
#                          ò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐò£¨CC2530£©\ZStack-CC2530-2 #
#                          .3.0-1.4.0\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\COMPONENTS\HAL\INCLUDE\ -I      #
#                          F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\HAL\TARGET\CC2530EB\ -I                     #
#                          F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\OSAL\MCU\CCSOC\ -I                          #
#                          F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\OSAL\INCLUDE\ -I F:\2019\Íõ¼üÄþ-20181005\³Ì #
#                          Ðò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐò£¨CC2530£©\ZStack-CC2530- #
#                          2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\CC25 #
#                          30DB\..\..\..\..\..\COMPONENTS\STACK\AF\ -I        #
#                          F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\STACK\NWK\ -I F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£ #
#                          ¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐò£¨CC2530£©\ZStack-CC2530-2.3 #
#                          .0-1.4.0\Projects\zstack\Samples\SampleApp\CC2530D #
#                          B\..\..\..\..\..\COMPONENTS\STACK\SEC\ -I          #
#                          F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\STACK\SAPI\ -I F:\2019\Íõ¼üÄþ-20181005\³ÌÐò #
#                          £¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐò£¨CC2530£©\ZStack-CC2530-2. #
#                          3.0-1.4.0\Projects\zstack\Samples\SampleApp\CC2530 #
#                          DB\..\..\..\..\..\COMPONENTS\STACK\SYS\ -I         #
#                          F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\STACK\ZDO\ -I F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£ #
#                          ¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐò£¨CC2530£©\ZStack-CC2530-2.3 #
#                          .0-1.4.0\Projects\zstack\Samples\SampleApp\CC2530D #
#                          B\..\..\..\..\..\COMPONENTS\ZMAC\F8W\ -I           #
#                          F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\ZMAC\ -I F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔ #
#                          Í¨¹ý£©\ÏÂÎ»»ú³ÌÐò£¨CC2530£©\ZStack-CC2530-2.3.0-1. #
#                          4.0\Projects\zstack\Samples\SampleApp\CC2530DB\..\ #
#                          ..\..\..\..\COMPONENTS\SERVICES\SADDR\ -I          #
#                          F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\SERVICES\SDATA\ -I                          #
#                          F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\MAC\INCLUDE\ -I F:\2019\Íõ¼üÄþ-20181005\³ÌÐ #
#                          ò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐò£¨CC2530£©\ZStack-CC2530-2 #
#                          .3.0-1.4.0\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\COMPONENTS\MAC\HIGH_LEVEL\ -I   #
#                          F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\MAC\LOW_LEVEL\srf04\ -I                     #
#                          F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\ -Ohz       #
#                          --require_prototypes                               #
#    List file          =  F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\CoordinatorEB-Pro\L #
#                          ist\DS18B20.lst                                    #
#    Object file        =  F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐ #
#                          ò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\CoordinatorEB-Pro\O #
#                          bj\DS18B20.r51                                     #
#                                                                             #
#                                                                             #
###############################################################################

F:\2019\Íõ¼üÄþ-20181005\³ÌÐò£¨²âÊÔÍ¨¹ý£©\ÏÂÎ»»ú³ÌÐò£¨CC2530£©\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\DS18B20.c
      1          #include "DS18B20.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1
      2          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
      3          uint8 id[8];
   \                     id:
   \   000000                DS 8
   \   000008                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
      4          uint8 sensor_data_value[2];
   \                     sensor_data_value:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
      5          uint8 ch1[9];
   \                     ch1:
   \   000000                DS 9
   \   000009                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
      6          uint8 flag; 
   \                     flag:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
      7          extern uint8 cgq_router[20];
      8          extern uint8 cgq_end[20];
      9          extern uint8 sensor_value[20];//±£´æ´«¸ÐÆ÷Öµ
     10          
     11          /*
     12          cc2430µÄ1¸ö»úÆ÷ÖÜÆÚ = 1¸öÕñµ´ÖÜÆÚ
     13          ÔÚ32MHzÖ÷ÆµÏÂ¹¤×÷£º
     14          1¸öÕñµ´ÖÜÆÚ = 1/32  uS £¬¼´ 1¸ö»úÆ÷ÖÜÆÚÒ²ÊÇ1/32 uS
     15          ËùÒÔÈç¹ûÖ´ÐÐÒ»Ìõ¼õ·¨Ö¸ÁîÐèÒª1¸ö»úÆ÷ÖÜÆÚ£¬ÄÇÃ´¾Í¿ÉÒÔÍ¨¹ý¼ÆÊýÀ´ÊµÏÖ¶¨Ê±
     16          */
     17          
     18          //#pragma optimize=none

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     19          uint8 Delay_nus(uint16 s) 
   \                     Delay_nus:
     20          {  
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
   \   000000   8006         SJMP    ??Delay_nus_0
     21            while (s--)
     22            {
     23              asm("NOP");
   \                     ??Delay_nus_1:
   \   000002   00           NOP
     24              asm("NOP");
   \   000003   00           NOP
     25              asm("NOP");
   \   000004   00           NOP
     26              
     27              asm("NOP");
   \   000005   00           NOP
     28              asm("NOP");
   \   000006   00           NOP
     29              asm("NOP");
   \   000007   00           NOP
     30            }
   \                     ??Delay_nus_0:
   \   000008   EA           MOV     A,R2
   \   000009   F8           MOV     R0,A
   \   00000A   EB           MOV     A,R3
   \   00000B   F9           MOV     R1,A
   \   00000C   E8           MOV     A,R0
   \   00000D   24FF         ADD     A,#-0x1
   \   00000F   1A           DEC     R2
   \   000010   E9           MOV     A,R1
   \   000011   34FF         ADDC    A,#-0x1
   \   000013   FB           MOV     R3,A
   \   000014   E8           MOV     A,R0
   \   000015   49           ORL     A,R1
   \   000016   70EA         JNZ     ??Delay_nus_1
     31           return 0;
   \   000018   7900         MOV     R1,#0x0
   \   00001A   02....       LJMP    ?BRET
     32          }
     33          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     34          void init_1820(void) 
   \                     init_1820:
     35          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     36            SET_OUT; 
   \   000004   43FD80       ORL     0xfd,#0x80
   \   000007   00           NOP
     37            SET_DQ;//Êä³ö1
   \   000008   D287         SETB    0x80.7
   \   00000A   00           NOP
     38            CL_DQ; 
   \   00000B   C287         CLR     0x80.7
   \   00000D   00           NOP
     39            Delay_nus(550);//À­µÍÒ»¶ÎÊ±¼ä 550
   \   00000E                ; Setup parameters for call to function Delay_nus
   \   00000E   7A26         MOV     R2,#0x26
   \   000010   7B02         MOV     R3,#0x2
   \   000012   12....       LCALL   ??Delay_nus?relay
     40            SET_DQ;//ÊÍ·Å 
   \   000015   D287         SETB    0x80.7
   \   000017   00           NOP
     41            SET_IN;//ÊäÈë 
   \   000018   53FD7F       ANL     0xfd,#0x7f
   \   00001B   00           NOP
     42            Delay_nus(40); //ÊÍ·Å×ÜÏßºóµÈ´ý15-60us 40
   \   00001C                ; Setup parameters for call to function Delay_nus
   \   00001C   7A28         MOV     R2,#0x28
   \   00001E   7B00         MOV     R3,#0x0
   \   000020   12....       LCALL   ??Delay_nus?relay
     43            while((IN_DQ)&&Delay_nus(200)) 
   \                     ??init_1820_0:
   \   000023   A287         MOV     C,0x80.7
   \   000025   500A         JNC     ??init_1820_1
   \   000027                ; Setup parameters for call to function Delay_nus
   \   000027   7AC8         MOV     R2,#-0x38
   \   000029   7B00         MOV     R3,#0x0
   \   00002B   12....       LCALL   ??Delay_nus?relay
   \   00002E   E9           MOV     A,R1
   \   00002F   70F2         JNZ     ??init_1820_0
     44            {;}//µÈ´ý»Ø¸´ 
     45            Delay_nus(240);//»Ø¸´µÄµÍµçÆ½ÔÚ60µ½240us  
   \                     ??init_1820_1:
   \   000031                ; Setup parameters for call to function Delay_nus
   \   000031   7AF0         MOV     R2,#-0x10
   \   000033   7B00         MOV     R3,#0x0
   \   000035   12....       LCALL   ??Delay_nus?relay
     46            SET_OUT; 
   \   000038   43FD80       ORL     0xfd,#0x80
   \   00003B   00           NOP
     47            SET_DQ;//»Øµ½³õÊ¼DQ=1£»
   \   00003C   D287         SETB    0x80.7
   \   00003E   00           NOP
     48          }
   \   00003F   D083         POP     DPH
   \   000041   D082         POP     DPL
   \   000043   02....       LJMP    ?BRET
   \   000046                REQUIRE P0DIR
   \   000046                REQUIRE _A_P0
     49          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     50          void write_1820(uint8 x)  
   \                     write_1820:
     51          {  
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FF           MOV     R7,A
     52            uint8 m;    
     53            SET_OUT;
   \   000007   43FD80       ORL     0xfd,#0x80
   \   00000A   00           NOP
     54            for(m=0;m<8;m++)  
   \   00000B   7E00         MOV     R6,#0x0
     55            {  
     56               CL_DQ;
   \                     ??write_1820_0:
   \   00000D   C287         CLR     0x80.7
   \   00000F   00           NOP
     57               if(x&(1<<m))    //Ð´Êý¾Ý£¬´ÓµÍÎ»¿ªÊ¼  
   \   000010   75..01       MOV     ?V0 + 0,#0x1
   \   000013   75..00       MOV     ?V0 + 1,#0x0
   \   000016   EE           MOV     A,R6
   \   000017   78..         MOV     R0,#?V0 + 0
   \   000019   12....       LCALL   ?S_SHL
   \   00001C   E5..         MOV     A,?V0 + 0
   \   00001E   5F           ANL     A,R7
   \   00001F   6004         JZ      ??write_1820_1
     58               {
     59                SET_DQ; 
   \   000021   D287         SETB    0x80.7
   \   000023   8002         SJMP    ??write_1820_2
     60               }
     61               else  
     62               {
     63                CL_DQ;
   \                     ??write_1820_1:
   \   000025   C287         CLR     0x80.7
   \                     ??write_1820_2:
   \   000027   00           NOP
     64               }
     65               Delay_nus(40);   //15~60us  
   \   000028                ; Setup parameters for call to function Delay_nus
   \   000028   7A28         MOV     R2,#0x28
   \   00002A   7B00         MOV     R3,#0x0
   \   00002C   12....       LCALL   ??Delay_nus?relay
     66               SET_DQ;  
   \   00002F   D287         SETB    0x80.7
   \   000031   00           NOP
     67            }
   \   000032   0E           INC     R6
   \   000033   EE           MOV     A,R6
   \   000034   C3           CLR     C
   \   000035   9408         SUBB    A,#0x8
   \   000037   40D4         JC      ??write_1820_0
     68            SET_DQ;  
   \   000039   D287         SETB    0x80.7
   \   00003B   00           NOP
     69          } 
   \   00003C   7F02         MOV     R7,#0x2
   \   00003E   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   000041                REQUIRE P0DIR
   \   000041                REQUIRE _A_P0
     70          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     71          uint8 read_1820(void)  
   \                     read_1820:
     72          {   
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
     73            uint8 temp,k,n;    
     74            temp=0;  
   \   000005   75..00       MOV     ?V0 + 0,#0x0
     75            for(n=0;n<8;n++)  
   \   000008   7E00         MOV     R6,#0x0
     76            {  
     77              CL_DQ;     
   \                     ??read_1820_0:
   \   00000A   C287         CLR     0x80.7
   \   00000C   00           NOP
     78              SET_DQ; 
   \   00000D   D287         SETB    0x80.7
   \   00000F   00           NOP
     79              SET_IN;  
   \   000010   53FD7F       ANL     0xfd,#0x7f
   \   000013   00           NOP
   \   000014   75..01       MOV     ?V0 + 2,#0x1
   \   000017   75..00       MOV     ?V0 + 3,#0x0
   \   00001A   EE           MOV     A,R6
   \   00001B   78..         MOV     R0,#?V0 + 2
   \   00001D   12....       LCALL   ?S_SHL
   \   000020   E5..         MOV     A,?V0 + 2
   \   000022   A287         MOV     C,0x80.7
   \   000024   5004         JNC     ??read_1820_1
     80              k=IN_DQ;    //¶ÁÊý¾Ý,´ÓµÍÎ»¿ªÊ¼  
     81              if(k)  
     82              temp|=(1<<n);  
   \   000026   42..         ORL     ?V0 + 0,A
   \   000028   8003         SJMP    ??read_1820_2
     83              else  
     84              temp&=~(1<<n);  
   \                     ??read_1820_1:
   \   00002A   F4           CPL     A
   \   00002B   52..         ANL     ?V0 + 0,A
     85              Delay_nus(70); //60~120us      70
   \                     ??read_1820_2:
   \   00002D                ; Setup parameters for call to function Delay_nus
   \   00002D   7A46         MOV     R2,#0x46
   \   00002F   7B00         MOV     R3,#0x0
   \   000031   12....       LCALL   ??Delay_nus?relay
     86              SET_OUT; 
   \   000034   43FD80       ORL     0xfd,#0x80
   \   000037   00           NOP
     87            }  
   \   000038   0E           INC     R6
   \   000039   EE           MOV     A,R6
   \   00003A   C3           CLR     C
   \   00003B   9408         SUBB    A,#0x8
   \   00003D   40CB         JC      ??read_1820_0
     88            return (temp);  
   \   00003F   A9..         MOV     R1,?V0 + 0
   \   000041                REQUIRE ?Subroutine0
   \   000041                REQUIRE _A_P0
   \   000041                REQUIRE P0DIR
   \   000041                ; // Fall through to label ?Subroutine0
     89          }  

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
     90          //ËÑË÷ID
     91          /*void get_id()
     92          {     
     93            init_1820();        //resert
     94            write_1820(0x33); 
     95            
     96            for(unsigned char ii=0;ii<8;ii++)
     97            {
     98              id[ii]=read_1820();
     99            }
    100          }*/
    101          
    102          /*¹¦ÄÜÆ¥Åä*/
    103          uint8 match_rom(uint8 *rom);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    104          uint8 match_rom(uint8 *rom)
   \                     match_rom:
    105          {
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    106            unsigned char i;
    107            init_1820();
   \   000009                ; Setup parameters for call to function init_1820
   \   000009   12....       LCALL   ??init_1820?relay
    108            write_1820(0x55);
   \   00000C                ; Setup parameters for call to function write_1820
   \   00000C   7955         MOV     R1,#0x55
   \   00000E   12....       LCALL   ??write_1820?relay
    109            for(i=8;i>0;i--)
   \   000011   75..08       MOV     ?V0 + 2,#0x8
    110            {
    111                    write_1820(*(rom+i-1));
   \                     ??match_rom_0:
   \   000014                ; Setup parameters for call to function write_1820
   \   000014   85....       MOV     ?V0 + 0,?V0 + 2
   \   000017   EE           MOV     A,R6
   \   000018   25..         ADD     A,?V0 + 0
   \   00001A   F8           MOV     R0,A
   \   00001B   EF           MOV     A,R7
   \   00001C   3400         ADDC    A,#0x0
   \   00001E   F9           MOV     R1,A
   \   00001F   E8           MOV     A,R0
   \   000020   24FF         ADD     A,#-0x1
   \   000022   F582         MOV     DPL,A
   \   000024   E9           MOV     A,R1
   \   000025   34FF         ADDC    A,#-0x1
   \   000027   F583         MOV     DPH,A
   \   000029   E0           MOVX    A,@DPTR
   \   00002A   F9           MOV     R1,A
   \   00002B   12....       LCALL   ??write_1820?relay
    112            }
   \   00002E   15..         DEC     ?V0 + 2
   \   000030   E5..         MOV     A,?V0 + 2
   \   000032   70E0         JNZ     ??match_rom_0
    113            return 1;
   \   000034   7901         MOV     R1,#0x1
   \   000036   7F03         MOV     R7,#0x3
   \   000038   02....       LJMP    ?BANKED_LEAVE_XDATA
    114          }
    115           

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    116          void read_data(uint8 * pSensorValue)
   \                     read_data:
    117          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    118            uint8 temh,teml; 
    119            uint8 a,b,c;
    120            int j=0;
    121          
    122            init_1820();  //¸´Î»18b20  
   \   000009                ; Setup parameters for call to function init_1820
   \   000009   12....       LCALL   ?Subroutine2 & 0xFFFF
    123            write_1820(0xcc);   // ·¢³ö×ª»»ÃüÁî ËÑË÷Æ÷¼þ 
    124            write_1820(0x44);     //Æô¶¯  
   \                     ??CrossCallReturnLabel_2:
   \   00000C                ; Setup parameters for call to function write_1820
   \   00000C   7944         MOV     R1,#0x44
   \   00000E   12....       LCALL   ??write_1820?relay
    125            //Delay_nus(50000);
    126            for(j=20;j>1;j--)  
   \   000011   75..13       MOV     ?V0 + 0,#0x13
    127              Delay_nus(500);
   \                     ??read_data_0:
   \   000014                ; Setup parameters for call to function Delay_nus
   \   000014   7AF4         MOV     R2,#-0xc
   \   000016   7B01         MOV     R3,#0x1
   \   000018   12....       LCALL   ??Delay_nus?relay
   \   00001B   15..         DEC     ?V0 + 0
   \   00001D   E5..         MOV     A,?V0 + 0
   \   00001F   70F3         JNZ     ??read_data_0
    128            init_1820();  
   \   000021                ; Setup parameters for call to function init_1820
   \   000021   12....       LCALL   ?Subroutine2 & 0xFFFF
    129            write_1820(0xcc);
    130            write_1820(0xbe); 
   \                     ??CrossCallReturnLabel_3:
   \   000024                ; Setup parameters for call to function write_1820
   \   000024   79BE         MOV     R1,#-0x42
   \   000026   12....       LCALL   ??write_1820?relay
    131                 
    132            teml=read_1820();  //¶ÁÊý¾Ý  
   \   000029                ; Setup parameters for call to function read_1820
   \   000029   12....       LCALL   ??read_1820?relay
   \   00002C   E9           MOV     A,R1
   \   00002D   F5..         MOV     ?V0 + 0,A
    133            temh=read_1820();  
   \   00002F                ; Setup parameters for call to function read_1820
   \   00002F   12....       LCALL   ??read_1820?relay
   \   000032   E9           MOV     A,R1
    134            if(temh&0x80)//ÅÐ¶ÏÕý¸º
   \   000033   A2E7         MOV     C,0xE0 /* A   */.7
   \   000035   90....       MOV     DPTR,#flag
   \   000038   5015         JNC     ??read_data_1
    135            {
    136              flag=1;
   \   00003A   7401         MOV     A,#0x1
   \   00003C   F0           MOVX    @DPTR,A
    137              c=0;
    138              c=c|temh;
    139              c=c&0x00ff;
    140              c=c<<8;
    141              a=c;
    142          
    143              a=c|teml;
    144          
    145              a=(a^0xffff);//Òì»ò
    146              a=a+1;  //È¡·´¼Ó1
   \   00003D   74FF         MOV     A,#-0x1
   \   00003F   65..         XRL     A,?V0 + 0
   \   000041   04           INC     A
   \   000042   F8           MOV     R0,A
    147              teml=a&0x0f;
   \   000043   740F         MOV     A,#0xf
   \   000045   58           ANL     A,R0
   \   000046   F5..         MOV     ?V0 + 0,A
    148              temh=a>>4;
   \   000048   E8           MOV     A,R0
   \   000049   C4           SWAP    A
   \   00004A   540F         ANL     A,#0xf
   \   00004C   F9           MOV     R1,A
   \   00004D   8011         SJMP    ??read_data_2
    149            }
    150            else
    151            {
    152              flag=0;   //ÎªÕý
   \                     ??read_data_1:
   \   00004F   E4           CLR     A
   \   000050   F0           MOVX    @DPTR,A
    153              a=temh<<4;
    154              a+=(teml&0xf0)>>4; //µÃµ½¸ßÎ»µÄÖµ
    155              b=teml&0x0f;
    156              temh=a;
   \   000051   E5..         MOV     A,?V0 + 0
   \   000053   C4           SWAP    A
   \   000054   540F         ANL     A,#0xf
   \   000056   F8           MOV     R0,A
   \   000057   E9           MOV     A,R1
   \   000058   C4           SWAP    A
   \   000059   54F0         ANL     A,#0xf0
   \   00005B   28           ADD     A,R0
   \   00005C   F9           MOV     R1,A
    157              teml=b&0x00ff;
   \   00005D   53..0F       ANL     ?V0 + 0,#0xf
    158            }
    159            pSensorValue[0]=teml;
   \                     ??read_data_2:
   \   000060   8E82         MOV     DPL,R6
   \   000062   8F83         MOV     DPH,R7
   \   000064   E5..         MOV     A,?V0 + 0
   \   000066   F0           MOVX    @DPTR,A
    160            pSensorValue[1]=temh;
   \   000067   E9           MOV     A,R1
   \   000068   A3           INC     DPTR
   \   000069   F0           MOVX    @DPTR,A
    161          }
   \   00006A   7F01         MOV     R7,#0x1
   \   00006C   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   12....       LCALL   ??init_1820?relay
   \   000003                ; Setup parameters for call to function write_1820
   \   000003                ; Setup parameters for call to function write_1820
   \   000003   79CC         MOV     R1,#-0x34
   \   000005   12....       LCALL   ??write_1820?relay
   \   000008   22           RET
    162          
    163              
    164          ////////////´¦ÀíÊý¾Ý²¿·Ö/////////////////

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    165          void DataChange(uint8 * pSensorValue,uint8 * pChBuf)
   \                     DataChange:
    166          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
    167            uint8 temh,teml;
    168            uint16 num;
    169          
    170            
    171            teml=pSensorValue[0];
   \   000005   8A82         MOV     DPL,R2
   \   000007   8B83         MOV     DPH,R3
   \   000009   E0           MOVX    A,@DPTR
   \   00000A   F8           MOV     R0,A
    172            temh=pSensorValue[1];
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   F5..         MOV     ?V0 + 2,A
    173            pChBuf[0]='T';//µ±Ç°ÏÔÊ¾µÄ´«¸ÐÆ÷µÄ±àºÅ
   \   00000F   8C82         MOV     DPL,R4
   \   000011   8D83         MOV     DPH,R5
   \   000013   7454         MOV     A,#0x54
   \   000015   F0           MOVX    @DPTR,A
    174            pChBuf[1]=':';
   \   000016   A3           INC     DPTR
   \   000017   743A         MOV     A,#0x3a
   \   000019   F0           MOVX    @DPTR,A
    175            num=teml*625;          //Ð¡Êý²¿·ÖµÄÈ¡ÖµÃ¿Î»´ú±í0.0625£¨¾«¶È£©
   \   00001A   E8           MOV     A,R0
   \   00001B   75F071       MOV     B,#0x71
   \   00001E   A4           MUL     AB
   \   00001F   C8           XCH     A,R0
   \   000020   AAF0         MOV     R2,B
   \   000022   75F002       MOV     B,#0x2
   \   000025   A4           MUL     AB
   \   000026   2A           ADD     A,R2
   \   000027   F9           MOV     R1,A
    176            if(flag==1)            //ÅÐ¶ÏÕý¸ºÎÂ¶È
   \   000028   EC           MOV     A,R4
   \   000029   2402         ADD     A,#0x2
   \   00002B   FA           MOV     R2,A
   \   00002C   ED           MOV     A,R5
   \   00002D   3400         ADDC    A,#0x0
   \   00002F   FB           MOV     R3,A
   \   000030   90....       MOV     DPTR,#flag
   \   000033   E0           MOVX    A,@DPTR
   \   000034   6401         XRL     A,#0x1
   \   000036   8A82         MOV     DPL,R2
   \   000038   8B83         MOV     DPH,R3
   \   00003A   7004         JNZ     ??DataChange_0
    177            {
    178              pChBuf[2]='-';              //+0x2d Îª±ä"-"ASCIIÂë
   \   00003C   742D         MOV     A,#0x2d
   \   00003E   8002         SJMP    ??DataChange_1
    179            }
    180            else 
    181              pChBuf[2]='+';   
   \                     ??DataChange_0:
   \   000040   742B         MOV     A,#0x2b
   \                     ??DataChange_1:
   \   000042   F0           MOVX    @DPTR,A
    182            if(temh/100==0)
   \   000043   EC           MOV     A,R4
   \   000044   2403         ADD     A,#0x3
   \   000046   F582         MOV     DPL,A
   \   000048   ED           MOV     A,R5
   \   000049   3400         ADDC    A,#0x0
   \   00004B   F583         MOV     DPH,A
   \   00004D   75F064       MOV     B,#0x64
   \   000050   E5..         MOV     A,?V0 + 2
   \   000052   84           DIV     AB
   \   000053   FA           MOV     R2,A
   \   000054   7004         JNZ     ??DataChange_2
    183              pChBuf[3]=' ';
   \   000056   7420         MOV     A,#0x20
   \   000058   8003         SJMP    ??DataChange_3
    184            else
    185              pChBuf[3]=temh/100+0x30;      //+0x30 Îª±ä 0~9 ASCIIÂë
   \                     ??DataChange_2:
   \   00005A   7430         MOV     A,#0x30
   \   00005C   2A           ADD     A,R2
   \                     ??DataChange_3:
   \   00005D   F0           MOVX    @DPTR,A
    186            // if((temh/10%10==0)&&(temh/100==0))
    187            // pChBuf[4]=' ';
    188           // else
    189              pChBuf[4]=temh/10%10+0x30;
   \   00005E   75F00A       MOV     B,#0xa
   \   000061   E5..         MOV     A,?V0 + 2
   \   000063   84           DIV     AB
   \   000064   75F00A       MOV     B,#0xa
   \   000067   84           DIV     AB
   \   000068   E5F0         MOV     A,B
   \   00006A   2430         ADD     A,#0x30
   \   00006C   F5..         MOV     ?V0 + 3,A
   \   00006E   EC           MOV     A,R4
   \   00006F   2404         ADD     A,#0x4
   \   000071   FA           MOV     R2,A
   \   000072   ED           MOV     A,R5
   \   000073   3400         ADDC    A,#0x0
   \   000075   FB           MOV     R3,A
   \   000076   EA           MOV     A,R2
   \   000077   FE           MOV     R6,A
   \   000078   EB           MOV     A,R3
   \   000079   FF           MOV     R7,A
   \   00007A   8E82         MOV     DPL,R6
   \   00007C   8F83         MOV     DPH,R7
   \   00007E   E5..         MOV     A,?V0 + 3
   \   000080   F0           MOVX    @DPTR,A
    190            pChBuf[5]=temh%10+0x30;
   \   000081   EC           MOV     A,R4
   \   000082   2405         ADD     A,#0x5
   \   000084   0A           INC     R2
   \   000085   ED           MOV     A,R5
   \   000086   3400         ADDC    A,#0x0
   \   000088   FB           MOV     R3,A
   \   000089   8A..         MOV     ?V0 + 0,R2
   \   00008B   8B..         MOV     ?V0 + 1,R3
   \   00008D   E5..         MOV     A,?V0 + 2
   \   00008F   75F00A       MOV     B,#0xa
   \   000092   84           DIV     AB
   \   000093   E5F0         MOV     A,B
   \   000095   2430         ADD     A,#0x30
   \   000097   8A82         MOV     DPL,R2
   \   000099   8B83         MOV     DPH,R3
   \   00009B   12....       LCALL   ?Subroutine1 & 0xFFFF
    191            pChBuf[6]='.';
   \                     ??CrossCallReturnLabel_0:
   \   00009E   742E         MOV     A,#0x2e
   \   0000A0   F0           MOVX    @DPTR,A
    192            pChBuf[7]=num/1000+0x30;//ºöÂÔÐ¡Êýµãºó1Î»µÄÊý
   \   0000A1   7AE8         MOV     R2,#-0x18
   \   0000A3   7B03         MOV     R3,#0x3
   \   0000A5   12....       LCALL   ?US_DIV_MOD
   \   0000A8   E8           MOV     A,R0
   \   0000A9   2430         ADD     A,#0x30
   \   0000AB   8C82         MOV     DPL,R4
   \   0000AD   8D83         MOV     DPH,R5
   \   0000AF   A3           INC     DPTR
   \   0000B0   A3           INC     DPTR
   \   0000B1   A3           INC     DPTR
   \   0000B2   A3           INC     DPTR
   \   0000B3   A3           INC     DPTR
   \   0000B4   A3           INC     DPTR
   \   0000B5   A3           INC     DPTR
   \   0000B6   12....       LCALL   ?Subroutine1 & 0xFFFF
    193            pChBuf[8]='\0';
   \                     ??CrossCallReturnLabel_1:
   \   0000B9   A3           INC     DPTR
   \   0000BA   A3           INC     DPTR
   \   0000BB   E4           CLR     A
   \   0000BC   F0           MOVX    @DPTR,A
    194            if(pChBuf[4]>='5')
   \   0000BD   E5..         MOV     A,?V0 + 3
   \   0000BF   C3           CLR     C
   \   0000C0   9435         SUBB    A,#0x35
   \   0000C2   4007         JC      ??DataChange_4
    195              pChBuf[4]='2';
   \   0000C4   8E82         MOV     DPL,R6
   \   0000C6   8F83         MOV     DPH,R7
   \   0000C8   7432         MOV     A,#0x32
   \   0000CA   F0           MOVX    @DPTR,A
    196          
    197            sensor_value[1]=pChBuf[4];
   \                     ??DataChange_4:
   \   0000CB   8E82         MOV     DPL,R6
   \   0000CD   8F83         MOV     DPH,R7
   \   0000CF   E0           MOVX    A,@DPTR
   \   0000D0   90....       MOV     DPTR,#sensor_value + 1
   \   0000D3   F0           MOVX    @DPTR,A
    198            sensor_value[2]=pChBuf[5]; 
   \   0000D4   85..82       MOV     DPL,?V0 + 0
   \   0000D7   85..83       MOV     DPH,?V0 + 1
   \   0000DA   E0           MOVX    A,@DPTR
   \   0000DB   90....       MOV     DPTR,#sensor_value + 2
   \   0000DE   F0           MOVX    @DPTR,A
    199          }
   \   0000DF   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   8C82         MOV     DPL,R4
   \   000003   8D83         MOV     DPH,R5
   \   000005   A3           INC     DPTR
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   22           RET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Delay_nus?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Delay_nus

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??init_1820?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    init_1820

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??write_1820?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    write_1820

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??read_1820?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    read_1820

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??match_rom?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    match_rom

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??read_data?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    read_data

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??DataChange?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DataChange
    200          
    201          
    202          
    203          
    204          

   Maximum stack usage in bytes:

     Function        ISTACK PSTACK XSTACK
     --------        ------ ------ ------
     DataChange          1      0     12
     Delay_nus           0      0     12
     init_1820           2      0     11
       -> Delay_nus      4      0      0
       -> Delay_nus      4      0      0
       -> Delay_nus      4      0      0
       -> Delay_nus      4      0      0
     match_rom           0      0     11
       -> init_1820      0      0     22
       -> write_1820     0      0     22
       -> write_1820     0      0     22
     read_1820           0      0     21
       -> Delay_nus      0      0     24
     read_data           1      0      9
       -> init_1820      0      0     18
       -> write_1820     0      0     18
       -> write_1820     0      0     18
       -> Delay_nus      0      0     18
       -> init_1820      0      0     18
       -> write_1820     0      0     18
       -> write_1820     0      0     18
       -> read_1820      0      0     18
       -> read_1820      0      0     18
     write_1820          0      0     21
       -> Delay_nus      0      0     20


   Segment part sizes:

     Function/Label     Bytes
     --------------     -----
     _A_P0                 1
     P0DIR                 1
     id                    8
     sensor_data_value     2
     ch1                   9
     flag                  1
     Delay_nus            29
     init_1820            70
     write_1820           65
     read_1820            65
     ?Subroutine0          5
     match_rom            59
     read_data           111
     ?Subroutine2          9
     DataChange          226
     ?Subroutine1         12
     ??Delay_nus?relay     6
     ??init_1820?relay     6
     ??write_1820?relay    6
     ??read_1820?relay     6
     ??match_rom?relay     6
     ??read_data?relay     6
     ??DataChange?relay    6

 
 651 bytes in segment BANKED_CODE
  42 bytes in segment BANK_RELAYS
   2 bytes in segment SFR_AN
  20 bytes in segment XDATA_Z
 
 693 bytes of CODE  memory
   0 bytes of DATA  memory (+ 2 bytes shared)
  20 bytes of XDATA memory

Errors: none
Warnings: none
